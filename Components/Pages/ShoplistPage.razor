@page "/shoplistpage"
@using ShoplistMauiBlazorHybrid.Models
@inject HttpClient Http

<p>@infoText</p>
<h3>Tuotteet ostoslistalla</h3>

@if (shoplist == null)
{
    <p>Ladataan tuotteita...</p>
}
else if (!shoplist.Any())
{
    <p>Ei tuotteita listalla.</p>
}
else
{
    <table>
        <thead>
            <tr>
                <th>Tuote</th>
                <th>Määrä</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in shoplist)
            {
                <tr>
                    <td>@item.Item</td>
                    <td>@item.Amount</td>
                    <td>
                        <button @onclick="() => DeleteItem(item.Id)">Poista</button>
                    </td>
                </tr>

            }
        </tbody>
    </table>
}

@code {
    private List<Shoplist>? shoplist;
    private string infoText = "";
    protected override async Task OnInitializedAsync()
    {
        shoplist = await Http.GetFromJsonAsync<List<Shoplist>>("https://shoppingbackend-e2ckgsb5gsfjafak.swedencentral-01.azurewebsites.net/api/shoplist/");
    }

    private async Task DeleteItem(int id)
    {
        var response = await Http.DeleteAsync($"https://shoppingbackend-e2ckgsb5gsfjafak.swedencentral-01.azurewebsites.net/api/shoplist/{id}");

        if (response.IsSuccessStatusCode)
        {
            // Päivitetään lista
            shoplist = await Http.GetFromJsonAsync<List<Shoplist>>("https://shoppingbackend-e2ckgsb5gsfjafak.swedencentral-01.azurewebsites.net/api/shoplist/");
        }
        else
        {
            infoText = "Poisto epäonnistui!";
        }
    }

}
